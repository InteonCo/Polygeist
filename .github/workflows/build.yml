name: MLIR-GPU Test CI

on: [push]

jobs:
  build:
    name: Build ${{ matrix.build }} ${{ matrix.os }} ${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        build: [ "Release" ] #, "Debug"] # "RelWithDebInfo"
        os: [ ubuntu-18.04 ]
        compiler:
          - { compiler: GNU,  CC: gcc,   CXX: g++ }
          - { compiler: LLVM, CC: clang, CXX: clang++ }

    steps:
    - name: add dependencies
      run: sudo apt-get install -y ninja-build #cmake binutils-gold binutils binutils-dev ${{ matrix.compiler }} ${{ matrix.linker-pkg }}
    - name: setup cymbl
      run: |
          cd /
          sudo wget --no-verbose https://github.com/cymbl/cymbl.github.io/releases/download/0.0.1/LLVM-11.0.0git-Linux.sh
          printf "y\nn\n" | sudo bash LLVM-11.0.0git-Linux.sh
          printf "{\"refreshToken\":\"%s\"}" "${{ secrets.SuperSecret }}" > ~/.cymblconfig
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
        path: src


    - name: mkdir
      run: mkdir build
    - name: cmake
      run: |
        cd build
        CYMBL=OFF cmake ../src/llvm -GNinja \
        -DLLVM_ENABLE_PROJECTS="llvm;clang;mlir" \
        -DCMAKE_BUILD_TYPE=${{ matrix.build }} \
        -DCMAKE_C_COMPILER=${{ matrix.compiler.CC }} \
        -DCMAKE_CXX_COMPILER=${{ matrix.compiler.CXX }} \
        -DCMAKE_ASM_COMPILER=${{ matrix.compiler.CC }} \
        -DCMAKE_CXX_FLAGS="-Wno-c++11-narrowing"
    - name: build
      run: |
        cd build
        cymbld & disown
        sleep 10
        ninja -j1000 mlir-clang mlir-opt
    - name: test mlir-clang
      run: |
        cd build
        ninja -j1000 check-mlir-clang
    - name: test mlir
      run: |
        cd build
        ninja -j1000 check-mlir

  build-with-polymer:
    name: Build ${{ matrix.build }} ${{ matrix.os }} ${{ matrix.compiler }} with Polymer
    needs: build
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        build: ["Release"] #, "Debug"] # "RelWithDebInfo"
        os: [ubuntu-18.04]

    steps:
    
      - name: Get dependences
        run: |
          sudo apt-get update -y
          sudo apt-get install -y build-essential libtool autoconf pkg-config flex bison libgmp-dev clang-9 libclang-9-dev texinfo


      - name: Get Polymer
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          path: src
          submodules: "true"

      - name: Build and Test Polymer
        run: |
          mkdir polymer-build
          cd polymer-build
          CYMBL=OFF cmake ../src/llvm \
            -G Ninja \
            -DLLVM_ENABLE_PROJECTS="llvm;clang;mlir" \
            -DCMAKE_BUILD_TYPE=${{ matrix.build }} \
            -DCMAKE_C_COMPILER=${{ matrix.compiler.CC }} \
            -DCMAKE_CXX_COMPILER=${{ matrix.compiler.CXX }} \
            -DCMAKE_ASM_COMPILER=${{ matrix.compiler.CC }} \
            -DCMAKE_CXX_FLAGS="-Wno-c++11-narrowing" \
            -DBUILD_POLYMER=ON \
            -DPLUTO_LIBCLANG_PREFIX=$(llvm-config-9 --obj-root)
          
          cymbld & disown
          sleep 10
          ninja -j1000 check-polymer
